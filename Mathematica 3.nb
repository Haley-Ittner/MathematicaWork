(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    225824,       4267]
NotebookOptionsPosition[    223827,       4193]
NotebookOutlinePosition[    224174,       4208]
CellTagsIndexPosition[    224131,       4205]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Haley Ittner", "Text",
 CellChangeTimes->{{3.671139189043187*^9, 3.6711391939579287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sine", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6711359446855855`*^9, 3.671135976811885*^9}, {
  3.671136010400103*^9, 3.6711360105902386`*^9}, {3.6711360607156906`*^9, 
  3.67113607395774*^9}, {3.671136110790345*^9, 3.6711361393833127`*^9}}],

Cell[BoxData[
 RowBox[{"x", "-", 
  FractionBox[
   SuperscriptBox["x", "3"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "5"], "120"], "-", 
  FractionBox[
   SuperscriptBox["x", "7"], "5040"], "+", 
  FractionBox[
   SuperscriptBox["x", "9"], "362880"], "-", 
  FractionBox[
   SuperscriptBox["x", "11"], "39916800"]}]], "Output",
 CellChangeTimes->{3.671136154318793*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sine2", "[", "x_", "]"}], "=", " ", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6711361617034407`*^9, 3.6711362361034465`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "x"}], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["x", "3"]}], "3"], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["x", "5"]}], "15"], "-", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox["x", "7"]}], "315"], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["x", "9"]}], "2835"], "-", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox["x", "11"]}], "155925"]}]], "Output",
 CellChangeTimes->{3.671136237365927*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cosine", "[", "x_", "]"}], "=", " ", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.671136276885229*^9, 3.6711363297772827`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"], "-", 
  FractionBox[
   SuperscriptBox["x", "6"], "720"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "40320"], "-", 
  FractionBox[
   SuperscriptBox["x", "10"], "3628800"], "+", 
  FractionBox[
   SuperscriptBox["x", "12"], "479001600"]}]], "Output",
 CellChangeTimes->{3.6711363330693717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"sine", "[", "x", "]"}], "*", 
    RowBox[{"cosine", "[", "x", "]"}]}], "-", " ", 
   RowBox[{"sine2", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671136375972258*^9, 3.671136403288131*^9}, {
  3.671136459322425*^9, 3.671136461313735*^9}, {3.671136821522291*^9, 
  3.6711368488212423`*^9}, {3.671137073124194*^9, 3.6711370873351154`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "13"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "12573792000"}], "+", 
      RowBox[{"237790080", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"3350160", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{"34320", " ", 
       SuperscriptBox["x", "6"]}], "-", 
      RowBox[{"242", " ", 
       SuperscriptBox["x", "8"]}], "+", 
      SuperscriptBox["x", "10"]}], ")"}]}], "9560105533440000"]}]], "Output",
 CellChangeTimes->{
  3.6711364110814085`*^9, 3.6711364632429886`*^9, {3.6711368253381996`*^9, 
   3.6711368507595882`*^9}, {3.6711370800418797`*^9, 3.671137089494904*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cosine", "'"}], "[", "x", "]"}], " ", "+", " ", 
  RowBox[{"sine", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.6711374590974784`*^9, 3.6711374987076917`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.6711374717512264`*^9, 3.6711375004556403`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cos4", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "4"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.671137544082741*^9, 3.6711376546133986`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"]}]], "Output",
 CellChangeTimes->{3.6711376579309473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cos8", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "8"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6711376664573298`*^9, 3.671137710130374*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"], "-", 
  FractionBox[
   SuperscriptBox["x", "6"], "720"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "40320"]}]], "Output",
 CellChangeTimes->{3.671137711211382*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"cos4", "[", "x", "]"}], ",", " ", 
     RowBox[{"cos8", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".01", "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".005", "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".008", "]"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.671137761359683*^9, 3.6711379548899636`*^9}, {
  3.671137987417841*^9, 3.6711380138889685`*^9}, {3.6711380728413663`*^9, 
  3.671138097870698*^9}, {3.671138139799822*^9, 3.671138152516269*^9}, {
  3.6711383938513355`*^9, 3.671138420054654*^9}, {3.6711399716727037`*^9, 
  3.6711399918128967`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
Oty4+yTT2ocA44x12t+d6XC0VeuyVQABB4trOta70eGhwNtX9r4gYMPIGto/
Lzp043BjOUYQ8EulMjDuFR16rFI/JveFgGFNF1WJt3RYftnBbCCTgFZ9xZ/u
EXSYILkp71EuAfk3nHhMPtJhenSag2kRAameCjF5CXR452pOpncZAbHPy8D6
FDpc71awL6CSAL8v8ncXs+hQK/nEX+VGAu7+KKFfyaPD2rdvN+S0EHCj0SGz
DtPhgu0Jb+UOAk78Lpr6+JMOJeOjM5/0EaDLf/OZeDUdvnK++shrkIA9dNlN
7vV0eGxYzPHECAEKGva2xzvo0D7+ZsR9BgHix2h8eT10+MOrpaGTRQDPuYJY
5UE6bJP2lJeYIuC33fX9QaN0ePvgVyfFXwSM3ZPu+ctgr28918Y/S0DnU+Ru
M0WHwQa/9cp+E1AddVWubpYOJ40DCi/OEVCQKpmtuUCHHftL9zfOE5BR8P3U
xyU6/OwyULzqLwFx9Vd+iXHLQu4KfQOdRQJCB8SD7vLLwqR3kc37/xEQMJO7
eVhQFp4djrWkLxHgyWtTaSwmC9eKnh4vZfNtGbFruVKyMH1l/23jZQKs1+fw
K8vKQvPoyPk0Np/eY/3h+UpZWP9F2oPB5v/3Pij8/++D/h9EqeVJ
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.005]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.008]], 
        LineBox[CompressedData["
1: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
/wEUHceD
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {-0.999999512971478, 
        10.719314709422484`}}, {{-6.283185307179586, 
       6.283185307179586}, {-0.999999512971478, 10.719314709422484`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"cos", "(", "x", ")"}], 
       RowBox[{"cos4", "(", "x", ")"}], 
       RowBox[{"cos8", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.14400000000000002`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.14400000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.008`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.671138102031926*^9, 3.671138157300209*^9, {3.6711383969862604`*^9, 
   3.671138420843973*^9}, {3.6711399821697645`*^9, 3.671139992626316*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cos16", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "16"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.671138255411466*^9, 3.671138297639909*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"], "-", 
  FractionBox[
   SuperscriptBox["x", "6"], "720"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "40320"], "-", 
  FractionBox[
   SuperscriptBox["x", "10"], "3628800"], "+", 
  FractionBox[
   SuperscriptBox["x", "12"], "479001600"], "-", 
  FractionBox[
   SuperscriptBox["x", "14"], "87178291200"], "+", 
  FractionBox[
   SuperscriptBox["x", "16"], "20922789888000"]}]], "Output",
 CellChangeTimes->{3.67113830233757*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"cos4", "[", "x", "]"}], ",", " ", 
     RowBox[{"cos16", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".025", "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".005", "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".01", "]"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.671138320904894*^9, 3.6711383310366955`*^9}, {
  3.671138427454049*^9, 3.671138429557454*^9}, {3.671139996332421*^9, 
  3.671140046843266*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.025]], 
        LineBox[CompressedData["
1:eJw1mnk4lN///+1m7PsMSbSoUGkv5JxKStlSiTaSpKKUJW+JklCotEj2qGTJ
EiHkHLJl3/d9X2bmIAqJ73yu6/ebP2aux3XNdc7r+Xwt933u61ayumlymYuD
gyOG/fW/36N6Igf/Ksni1qVl9ocA6auekxQFWSzau9Fuks29fpMRMnKyeNuF
krQCNid9unhsrYws3vGbq86RzXfK6ue2Ssjin3dUy/nYfGD04EcgIouVeBMi
3JYIEKF8PWEgIIvdJPj1a/4R0LZemfMsnyyOuTzWxMPm94ffJNtyyWJjaRmt
FYsE3LxCOeeyRMdX/Bw8Jf4SoOH7H9V7gY5lnBeix+cJ4Isbzwz6Tcc9PQ3v
YucIqCs5ax01TccecpoP9/0hIHy4Uvwzi44zCgN0s2cJsOXTRjnjdDyNDzIl
ZwhYOqQo19xPxwtV1hP2kwT8vBxUOtBNx0HS53TtWAS8esTlPNVOx8eVGvyP
MQhQLR6sEWqg46ddcd1JIwT8Hjx1T66GjhtavSc3DxFQyFOqsqGCjp039s4G
9RNgphP/6OAPOmaNnRta6CRgjbXc9uOIjh84kEaOdgJYD/17L+TScbhTf+FI
MwGPfthruqXT8UpN+kezWgK+HNg2lRpLx5MRUUMlBQTcs4qNzI+i4zX+YE3T
dwKOeEnpV4ax9R1Ociv6RkBPwe+PIy/p+Oj1bh/dNAKE9ueeU/Cm45pvLU9a
IwlosVQTULtPx7l1+4Qm3xIQcz8ia687Hc/+vlg++oqAvdhT4pQTHY/nBIt5
PCHABuiU+VvTsYDOylN7nAjYavHV+a0l258VwvpnbhCw6KG8Ju4cHcfGb0g4
b0vAy3yKR+FJOt7zyDidco4AvK9q+7wOHa9nDcRO7idghZZplM06On7W75Qu
TCHgkoPK8VVKdKzT1OQYvcwCie+XuFrl6ZgnfTJP9A8LaArH2ehJ0TF/SIqY
9xALnO3+s0mNm4419n1uL8IsEHb/bd5ULw277u2xSHVggYEM+xsJnTSsnKga
LmbDAqpj+xUvtdJw//EBMcOzLJB7fPxhYw0NbxZaaLQ8xAIdqzWPZeXTMOeM
psoIjQVWFHe2uYfT8KvvlpFemUxwaT7Vf2cIDSfnqtzLi2eCxE2P9rFe0rCu
auv1xnAm0Aze9M7Cn4YXJaQzIr2Y4OwVD9sDbjT8aEzyTaQ+E4RRFf/wm9Gw
hJXBefN2BlhheEnqpSQNi659aKveNQFC/HLOvhKl4V2iJqevV00AmR/isa8F
adjf7+6TJ98ngNgevDWEm4b3mZ/85xwxAfhWrzSK+CWDe6QsWrjOTYDJ2ebH
cQ0y+J3p2zKuxnFQEnF0OfelDK5e5/9QKnUM6LS+0/3+TAbznDyaOxc+Bgok
5gPz/WWwj42DzY/HYyDPN06+4KEM3tqSfEno0hhIu8WjUeIog6f5U+g3pcZA
+KF8p9oTMjhbYCDD7/YouM3cOj4oKYNPB+3mDpcfAS+6TPcviMpgu8/68kN8
I+BL1d0QUSEZfAXFKNGnhsHU52JdDR72enMFOlrFw8Dhhnnssxlp3PR1l6an
3TC4Se6f02iSxmfdL0VzZQ0Bu6ma6mfB0jhbxWbzW61BYDNrn64hK41Pxmne
kRTtA37yN18fp0rhmpp+NYPMesBZt7U1UFASz/Wu7Ffgiwef3n/b7j8njg/c
6PhtO1iBmL3JXgHjYviRsssdkN+FpPLsV0YMi+GI905Lk7NdSOONWvbnfjGM
e/f5PNrUjXwMEpjV7WJ472ulAtPwbqSY88FMvEIMvzixTHnl2oNOvgzfHJwo
hvMsX6V/eN2Lcg89aY+yE8PdzckDq7T6Ub+innOqrRg+FaqfNXuqH1EW+cUK
rMXw8r2Zim83+9HJL48O9Z8Tw8rmGSeFYvsRS+FB6loDMXwhYnFTK2UArZ67
4xO/SQzznBh6PFs7gCRPVVjbdIli8ezp2UiTIXRmh2hsV6MoPq8tIs1vN4Si
JU/0nawUxc53jjaYPhpCavXt5w/mimKfDkpOUtYQ0jUaN1V8K4rX6MyJbVkx
jFz1qHrtJ0VxMkjQce4aRl37Dm8yrBTB38Tm848YjqK1K/2vF/8QwUG7nyne
tB5F1xar47VyRfD8Rwb6z20U/c4xVVZNEMHlcaUnND+OIrE9NqsofiJ49N1d
WfvFUXRg2yPxwoMiuHujUb1z7BiKU/4xuzNXGFeE2lm6dowjMwlhC+10Yewa
ERKazxhHAkumZbqJwnhHkp/i+L9xZNc0Hno6TBiP+qVVTK6aQOreEvC/u8K4
h7OvLMdqAmX3XXySpymM1XY959k+MIGuViX+KtoujPvL2XU7PYHkvs2eq1IV
xh74bNY+LgZyf/54S/cKYXwYOOi3KTIQBGmNy3+FcHblf3sLzjFQWTjHqoN5
QjjI0lnncA1bo99Rv2MZQrhB4Bc3vYuBVJxeTZ1IEsJhNObqynEGCji2ocg6
XAjfPiOt183LRMYLRld93IVw5eVE/EmDiVpPR6X/1BLC309GiVREMtHjg2Py
9TuEsLqZz4eKBCbS2LLdp11NCDe1DNUkZzJROF+p2YS8EJ75xJUqX81Ell9Z
/4T+CeKoGz/PvP7LRGMS2keMvwviD675sZPGLNRzdU3d/a+CeAR6XOw/w0JN
mHIm7bMgPqRqop5lzUIFNxquS0QK4o36zR1UVxZ6W277rNFDEJsezr1mEsFC
el4vm82gINb+e7nEtp+FQJurxeM9gngqP8Ded5yFdqpfGP2mLog3MDvD/aZZ
SKl7w4KckiDeX//ceRsXQfN781d2cQpio7oguEaRoPipUeuLPwSwaMj0GkdT
gqKOVDODcgUww7buT+Y5gl5HpbsUpgvgg7u4RzqtCHpg4OG35r0ADrcT5Ki5
QZB5vGTSkLcAvt4e4XnsEUFGHPM7ZO4JYKtaredRTwg6dLr7u66zAHaOtHve
9IygrbzxNXGXBfCnM9+PjbwliHpR+9dVXQF8FCqqvEsiaDlrjXuotgCWueq2
jSeNoFkRKm/FLgG8YlUVr95XgvryGmTU1gtgsVvb/t35TlCL5Leoc6sEcOoO
V1mrAoKqrkVuCKQJ4NOd8lObign6Rr+qweIXwGm2ykXXKglKuWn4Q4FDAMse
+JDdUUPQh5Lt+kZzVPyYZJ7Z3EBQkNPS+dRRKlZ5xBPm2kaQb8XAcG8vFeuH
7N/u0EnQvdU/b4q3UbFYh6S9Xg9BV2tfPrj9k4rNwrJzogcJMjMGkvOYijMS
H0edGCHoSO34e89sKr5uVJ3VP0bQbuPgXXypVJx5K47DkEGQcu3+soA4KvZX
u3DnNYsgGWOmuWQUFadVXJL9NkkQb23IxNtgKn5Tc3wwe5qgwRoiEveIirMV
ZBj6vwlqNAqL3nSPih89Hl3b94egHzW62zKcqDgnPMzj+DxBX4ymf2jYUfE/
nhd/IhYIiqmJOFVwiYrXpJk+LflL0AsjvZHDZ6m4uSF8f8UiO781M67VJlTM
NQTEkv4R5GAULXDqKBUrxx6ct10iyLLmWHjHfrYeqca/nMsEGRv92WS1l4qf
+x6i3WEzqIlBo+pUnPJK6lgZmzcbGR6/uYGKq1YOB8+yWaFmvn92FRXrGPku
LLFZ2OiDkzuNimejmM6DbF6sNubjFqXi83W7qB/ZzDBcfPOYj4rtyaeMg2zu
qI7bKLZEwfuMv7h+Z8dTbngiN3iWgl+8HDslyeac6iX9lUwK3h4jbHCIHX+8
YUJ37CAFS3zmtTjB1hdSfcpBpZOCDdT6Avax9fsZcnKlNVDwn66WFm62P3eq
k17urqBgXKS3/+McQTaGZuvyCynYRhmVr2X7a1rNnaWTQ8GcT0adPWcJ0jVM
OVKRRsEymZE6mb8I2ll9pv14PAU/S+7f83OKoLWGfHat0RTs+KXrZDYhSKo6
7d+FEAq+t7cv9CGTIB7D88+GnlHw/SkbYdUJgn5VUZTsfCk4JlcsJXmUoPoq
C53/XCg4aF7R/+gAQYUGgs3L9hRcLfWqwqqXoLSqzCs+lykYPNE5fLqLoOdV
wv4vT7Ljvaa+1NhMkEFVbt3nbRTssjm/YU0ZQVoGVy7tUKHgQzsCTRWKCFKr
kpjNUaLgqLfHd8wiggSqrtLLxCi4WOOZ5J4sgsoqaRb9LH5sdtqOKfGeoGz9
H5O2w/w4IP1cw2QkQXGVN7xIFz9241vYl8juZ5/K4g+Llfz4RJ3Qt69PCdKp
dGTIJPLjDZZLs0p3CIo0Wxe/OZYfP3N7mGh8i6C5webLumH8OP6qVrzldYKS
/u3tcfbnx28Swl6ttSBIegtHfeN1fvyQq6NR6xC7HnPTnjIu8eOTNX+cXLTZ
+T986RjPOX58M+L306DdBHlYlhRt1+fHVManY3YbCRoOCsh6ocaPJxXKEzME
CYIK2k4Ja/mxXp1o9wI3QaEJRL1Qnr2f0JkfqxdZyPCHScKUED+uX8DFNAYL
Zc3QI4yZfNhKJc33TTkL+Z3+4CWSzIfP1t81mn3AQv0DpkD5Ix8WQyufnGHP
ay0HyuK+SD58NFONI+YGC036XXe2f8qHjQMSi1rY8948Z6tt5Q0+nFO+F/ds
ZSGVlfkGT7bw4ZPlP22vtTNRVX8znS+NF8c8rQzJkmYixRDDbsdPvHiJe3Xz
GX4mcjIoie2L4sXUUf6CzjkGks/+uvn7U1788fSufvcOBroW+ErHyY4Xr5vU
36QexUB8e0wc+tfz4poOEa3b7OsnCKwqzY/kwde+X38xLDCBXhw4FKgWzIOf
6f587TU3job/5JmEBvLg5Cq32OWhcfTUKqnL2Z0Hn3+9uC0Cj6PO3f6/1M7w
4H2ZGz1sncaRa/+RVWHSPHho9JX0ieYxlLa7yOVOADfedPJJu6z3KDpq1nJW
2JsbBxRwRly7MYr6Xcdh7F1u/Kdxh1m02SiSyhETrLnGjVdkmMnmqo0iF63z
Ucp63Hjau88htWEEaez/XdrEy40/Jr1dnyo/ggqPbpDd4cmFrUIvq2SFDaH6
8wG5k7c4ce2eQ1mtJ/pR05MPFbRrnLhRPDNFSqMftWbld2hbceL4r5YKQLEf
9YhP/Q0w4cQr2vsLLBh9iFF8Smvjdk7s4vu9q/5hH+LbvOr7xRkOvPjmk2dw
Si/SWErLr3fhwOcnivHT313owL6Uh1f/LKGfltN07fpmFKx55tfs1wU0NL72
jfrOb+jwTcFh2vffKFU2palR6gdIXlWnqX1zGgkY6aw5y9MOFoQspE5fmEYJ
4nl3JQ60g0MLDMZNg2lEVefzSfJsB52NlMh3qtPIpmprhO9COxB4Ajl4R6fQ
RK64eT2rA9jMpBRVWE6hbtnM5x51XUDh51MDc5NJFCGy2Jac3wsUhkLyR68x
0EDl6EF/9UFgOVW5wuIYAyX/IsfnjwyCmH8c/zWpMhDP1oXEExcHgbLM1e2F
jAmkuDNwqDJoEGw+vPdT2I0JdFFAvqt6ahDsi28LMrw9juKyYoIWPw+Bc/Zy
lzP+G0UznSM1ljIjIPI/w0KVM6Oo51SygJraCOh95LXqncYoOmzg9qN3/wiw
jhxvC/w7gjydB87w2Y+A6zU5hlfujaCt4uKtoHAEuG09u0fuwTCq/y9G+Izt
KHg7GyZ4328QtaidUoiOGQP4w6i/oc0gcqRvSKFkjYHRUzuFVuoMIoXmkIET
FWNgT2a1UM7yAMo/UNIe9GsMNLtwisy4DKAJesOD+APjQGLORsz2cj9y03io
sKNjHGh8Sn++62A/SnadMc1jjoOLZhzivEr96F78gdp1HBMgNfuteExnH0oT
89oavnYCGP1XKdF5og95vAm9JmU3AQIWtkobH+hFujqXhJRmJ0BGgsdrBcVe
pJ7+pjidlwEyvwartv/tQVLLy57KMgxwyuWnmpRjD1rRe+tz4i4GePFn8xa/
i92oBlOHt7kwgNDC/HYH7U4kLl+quI4wwPLSs31wrgWtsZbhWFPGBO8LzYNt
sluQYMklkcIGJtDzWUMCXFuQt+QHu4M9TPBSOCu6ba4ZecSbTDBmmWC9fDe3
43wTWvV3OatNiQWM9qqVf1hoQLb3fdeJO7HAzOLs6sqcBlRAWNK191jgLUZ3
p90aUHgn/2cHX/b5+/CJTeBvPfqtSo83DWWBO6Zuz1v/1qGmQ60NGfksoD3y
/LPMQg2KnMtX/8JJgN+NtRaX3GqQ7pEyY18qAfWzWWKpC9Vop5JjwD5xAmx4
ehz1/lYh1k76HgNFAp4qbdJwX6xAAr5Hgua0CGj9hCfK3CvQRNqW/KaDBKxW
Pxkh/a8cuZSmVL48SkCm9l2OlH8/0cPCAscvpwnoPvuzpG+pFF0sH9n5nwMB
GwbOuW72LEXrXVxzzrkQcPva5Ma7yyWo8elplqI7AXz/0QKlOErQKK+qwTFf
AjYHXz5xmLMITTIUDdeHE+C6cp7n1YMf6EqzTrroOwIK3wdk9nL+QKondke0
fiDAND1d1o2rEGnGhjIEUwi4V8vZm8SN0e2Yb3//IALU6CEyf4QQEl+tGlX7
gwCLZ2r2ryTyUdlQcM+TUgKK7p2Sq1mZh+qGdm18X03A75kxB7s1uehPSrQq
dz0BG+08Sqkbc9D53pvfDzax/TkT56SzIxvd+TnmdbWDAFynWdG3NwsFcaen
GnYT8OtIrZInyESnkxSspPsIMNs9X/3taAay4z176PAwAf7JgetOG6ejDO/t
t7+MEpC/brX7zKkvyFI6n748TsAaqWMbt1xMRZs2aZRrEQISZdBySFUyYsqv
rNs0RYAY72hSQ2sS2vLrlR7HLwKcf4mdERlMQLpOA1szZgho79vLr0c+Ic13
V/z0fhMAaq0yHi58RJbfIo7hPwS8z/e/mM/7AeVrrnKjzxMg8DlDZF4sFt0c
jZEwWSDgZlhX7nb5d6ilYFHS/i8BnySF6zsNI1GJsMK9q4vs/E1eUDO5HIru
mEobHP5HgFZVqk/p3WB097rIQ74lAvgTuPq0XrxA961MFOLYHCMc72J9PBDx
hBxW2LhMwO5SfVUjj0doKOWWVwCb33D2IUfTu6jt9a2jdWy+P2Zs8sLyCiq7
x+vyh83Z+L6dYIoREB2k8P7veSnr/REeoXBHEBbo9GeEzf0h9w1WvHsA5nwv
GHxhs2FPZ4i602Owd+MC3wU2d76Qn46JfQ6KRUPWTrDjkcgsf7Mp8BUQWP3x
ozmbj7S57st2CQGyT1MC49l6PBaVBw5YhgO5n+fa29l6259dKxpeGw1SnzoG
Mtl+OL3bT0uSjQG7e5vj+th+iabTr90SeQ+muH1Vsth+JhSRvF3cH4Gg9zuZ
G3MEHGouEV38Eweeb7poz8f2v3ckwqqAEQ/2iiqo358lQEZQn6Lf/Bk4/X6w
TJsmIE1+zVnxihRQduq66K5JApRp/0wnelJBbERz0E4Wu942NManNn4Bs+vm
Z1vH2PWYBk5I1qSDxuedHe4jBJzVSFx0/pkBBHaGanENsev5mJeRZn4mEP66
zzWth13vjcy5iOwsIKi/16yjk4Cg8+YxHOnZYCBQ4/twG7tfbqrPFsflgJOn
c5RiGgiwetEdahyUD5APT2JiMQGci96q09EIGGVtO/e0gIDaL9LdemYYbOgo
1Df4ToCDfN6NiSsFQDXRfNkig4BUQnm+2fcHqO2+qNEWzc7v2nNmyyJFoFHV
xzkyjABj8xTF2uAikPqwUA4GEzBZeCrt1sdi8CG0NZfuT4B6cEx9RnEpCOx+
JqjoSABHxWzoI4MyMH38lt5PO/b+y0cumTaVgQOFa5WNbNj7XyW//gz+BPZR
J9smzdj7a2lJa/JUAvnLtYsB7HkWMjWeaKlUCx6K0a9t+ccCHAFSYnqXa8E2
s7+mH2dYwFZZ22lrfC3oHJm6ujDBAnvOBmlxba0DYZoGGzXaWaC1aHdVLKwH
HR9yN8h+ZQF6iDdr2KIRmO257nXBmgXub0s2qYltBFGOrt+SzFlgtLIlM2uk
EYwclSxuNWSBbE5VT7+bTeD8xY4n5XtYwOx6naiKZzPIdXXfIiPIAiHaClvt
I1vBu7JHxubxTJDgTNtX2dUK+sJjR20imCAvSUxPdWUb+Hk7+M7pICbok+O+
OBbWBgI6L8X3uTKByp+R55fftoPcupTkMF32/1PSJs+/6gQe2lqb0joZwOH5
arP1h3rBob43K9GvCTCvuqq72boXrH2t+VZncAJ4la6w9vHuBTsDd+UlN06A
V0tSDkM/eoGDo93OrV8nwDc7fr/YA31gkKYbN+k0Abj0GFmrYD/Y7SzjeIWM
g5ecmTS65iDoUfU0j68dA7vm37rdPD8ILBSPXzLKGwPtk/e6SjwHwafbrj9b
4saAYu+hWOeiQVD+bRv1uccYSM5v2txgMATu7v4yHa0yBsrvzh56ajkMpDon
8s3vjQKO3zuceHxGAZ8FeNgqPAJujKfXTtYyQAKvofRi7wBY2qHyNW6aAdbe
Nwl4VDIAAj2j316QYoJ3T5tF5xMHQJJUoFXlaSZofWP6JdJlAIxr28zEdTPB
XLP++xGBAXDlJZ1uwWAB/j4frydb+oF6ZH7K8MNJECy3Vnjiai9QObzmz8mo
afD+IUt1w8k2UHBpmCs88DdYXnRUXBVQBGK4Xyd21y6w60yb735fDlK+sa/O
v2IJpL18r/h3UzPS3Ruhq9yxBKQNq3a72zYjG55/uXh8Cey7ark8EtOM4kLz
Ps5Sl0G5R3iBB60FbSjVdLc4sgxOXqzjjl1uQRsVNdZvL14G/O/OGAdXtCGZ
q2Ha9hYcsO1fwc5E4y5EXxHySsqcExY9Pc9c5GTfR7U8KPG/yAnn1lpnTa7s
R4deXZ/jusYJ7YzGdtfu7Ue3hcG5KTdOOHrgc8/xW/2oanloTXU4J1TSbrx8
rqcfeQ1uT/ft5YQFFfvuOGYNIObnmrqFK1wwks96scV0CHlf+8Z924ELiuR/
H+d3GEJy62N3jrlywWjrhJZVj4fQkWiXty2PueDJn1Na/LlDKObFyosZiVzQ
kbpyY9rKYWR25/qkPeGCJjyGD8y7h1Eh5Bftc+GGVj3upfv1RxFrcly61IMb
mgbukSu2HEVy76rlP/tww66Vd+PVnUfRbc5glf+CuaHfpNBmHDGKVheu1RXP
5IYrjIrj8pmj6MHBA/f2z3LDAzz99hsejyGoe2/inSMP3HyiNl3t8ziy+205
7XuXB0ZKD9e/yB9HIR915u0f8sB1w/M93TXjaJJPiF/jJQ/El3/c3zA9jqJL
Q1fXf+GBgnICgvd3TqDlI9nmXNM88IE3oGzLmkD5x36VWjnwwqynRlt2fmSg
yXqxkmlXXniNm7fY5isDrTmzucjrAS88djjwzp0iBvKzvYpjXvDC4eTtrJ39
DGTyqCe7P4MXGtxlHF4nz0TD+RXxVvO8MM4z9Ax6zER03bG4aU4+aLzx3Xx7
MBMdq+L76CXAB+30dqY3xjJRasf+mJgVfPDWQJaG1XcmcpvLCu3fxwcNFZ7w
DLKYSGTbe38rLz7ozMFj5HKMheC3gsfTT/igptC3GTtTFnKEPb5eL/lgu5Bv
G7zIQq2Gct4x7/lgmvHc5vsuLBRz/bl7fwkf/HMwI+tsFAs1Tn92u13DB6V4
org141mI363ClauVD4rJlG7584WF7Pz4nFeP8cHa/LOLvCUstOuDu72VID+s
bN6/x32chWzVQq9PS/LDPq9Ppvt/sVBYetZVL3l++LjUk2PgLwtxFE5fjtnE
Dx88W1GTK0RQebfthX4jfmiRvsWgUI0gC/opI6tX/NCRl29RzoYg5Zd2qy+G
88OJp1k1u+wIYgl7z1q854ceIg5w+22CPLjTw85n8EOfNyp9VfcIimSJjZo1
8kPdUKn7j18SZHN1Q+7pTn640/BWWHwIQZsHwVPTQX64oH1zfUIEQd/bbuw4
OcMPn0rdvqcfR1BnUeV9IykKVMq+FSH9jaD3YPCEoTwFqrDasvd8J8gu56+y
wVoKXMFjoahVQNDfFJWqozsosCGk+cdAGUGFKgei9bQo0CljzZxvJUFPPpg7
HtGhQLOpA1eFagmSC/OT1T1JgbwT1JmvzQT1S0czdM5RYJSEAH9HG0EJz7PQ
QWsKLNwdqNfbSdBen+HL+50o0KpM5bh/P0EcnEt7oDsFcrSEiW0dIqjsrrQQ
8KZAsS37ZjJHCDK7pfNF6xUFlsyvULjEIEiRcfaRZjgFno5JtnjMImjUxtFM
4z0FtvLI5z2bJCi174nq3iQKNDp/YavLNEF3zsUs7c6gwCfFz75rzRCk3fKt
blceBfLvHr8wMEsQn0nd+51FFJgZUCp57Q9B1ZWjd3ZUUuA773fttXMEBR/m
OLa9kQJvF4h/oS0QdKGQprCtkwLbKupCtP+y87lvy5T6IAXWSeYGHlpk5zNL
t2gLgwKLpkqeqf0jKHPbhTebZyjwbZxI5C82e3x2vrZpkQKDLlZkhS4RpLsh
cJ8aDxXK7DbtVFomSCT2vZiqEBWeUd0g+JjNTSvzBjZKUeHgpvaDtWwOD2nI
3CBPhbNy63zY95/IWnLi8fq1VFid21f3v+ehak+5ziurUWFzCWX9MJtnKHLq
63ZQ4ceeL48+sznv4VbutVpUyAims06y2XvpSPNqHSrcee2FZSc7Hv3/LOOV
9Kkw6EdI10E2S83ccVc8SYWr539c9mfH33njmdGqc1Topl85/4Wt9/3Yx9UK
1uz1xh6H5rD9sLPOn5W3o8LkkZkjMWy/tvc0la1wosIhnXV81+YJWjBnhsm5
U+GTUZMGcba/hY08N2W9qXBXdFPa298EmZRvl6a9okLmQusnvV9s/W0pZcww
KvyUDk/cnWLXw5iqe1EsFXrcSzB5Sgg6T1k7cCudCpsW+MzMJgjqpUUHH8ml
QoEoHivRMYKs1ssfXfWDCru3yv2MGybIVlcqrbKeCr9FDme59xE0ceq5dWw7
FS5lvtT51k3QjctCdLd+Knyz89Celg6CnLx5PNdPs/XKDFlkNRHkWTij7yUu
AJtl6nmo7P7gqnfgMJcVgNFmT1ceL2L72cdI36IkACtgfKYbZvcLx5Bcl7oA
nF9udL2dza4n7abR3cYC8PR+y8SZjwTJGh4PFzETgAufonfoxbDze77KaMhC
AKpVTlzwZPfzO/fizBc3BeCzv6vjn7P7PynnqzfzqQDc0DcXdtiDoC3lW/cU
BQvA3rKPGfGuBH1p+zwRGikAFTxPBTPZ8yR77oPJkWQBuPt0a7ncFYJ+7ApW
jK0SgJPN+W8FDdn1pyvR+F+TABRZ8SvU/TC7/0499TXuEoDb4i68qoHsfnDy
Yf1jCMCjQWGPV2wnqP2LS56ZkCCUMN2zR1+G7X/h9M0tUoJQzWs0o0qE7X/d
jTV88oIw5IGm5VZ+goYmbZ6kqwrCQqRoGfWHhSY3nzYTOSYI33zwbZVpYc/j
xN0zPx4Lwkrazo9uz1noeRAzUueFILS/eqrU1IeF5Fxj9YpDBaFvnK29mDsL
qR0SjSpJFIRp+K+L/BUWMukZ1vtZJQhXxF+oDtFkoUjJ4KhqcSFoFG30YFM3
E21YOHbUSE4IrguhZ43UMVFaL+dszWohGFPwYd/9YiYq+mx/tG67EGxN1HbW
T2KiscOHZhtOCUHxfCnFE65MtMN95mjbWyHY5nbZXlmAifKtEmbNY4Rg4qTH
y8q/DHRYzzK6PUEIpkrsXjzOZKAzMpWzHblCcFpSqmWhhoHup8ZGd3cJwXv/
vB+VvGSgikGT3wNKwtBz539NJ6UZyMog7R0rXhhaC3uqVnFMoAfrLyp1pwnD
x1x/orMI+3rOKf6u6pswVGu//Nq3exx1fXWITvopDB8OjGi35o4jMwX1qGtj
wjDrtK2TtvM4MiDJ4cMbROCrC2u/bxoYQ3uCkt50x4nA8Z5Pr2hJo0ikKS6w
+oMozO1dIja/h9B2nyAe22RR2E8baD7VNYTMdt+9y5klCgf7NrqpFg2h2LeG
V3eUiUKdM/rX/IOG0J4Lszqh46LQVmqnspLqEEpzVFr6QhODTtMRUvnmg6hj
8cZXj3NiMOT14eyXH/rRFlGBtTLDYjAnakHs8r8utLeiXnj/jDjsDtJfcfxa
JZqYbwvWnZSA5/2Onw//GQwcqPL8/pxSMPRix5g6qAdR/uEyCRzS0P6AYUTQ
lV7A1yr08AWPNLznkOxx0asX2K29R9wo0jD3iEikUkQv2PP9fNkxMWm41z1H
/XZ9L6hlKbgxV0nDqTsh3ce1+gCXybsudSANu24snZoV6gc29I/vs+5Jw0SH
1qpV7wZApbWMePQDaajKMtpY+m0AbEvzuef3SBr66nemnq0fAMt6V0zNA6Vh
q4n98DHuQRBydwPlb7g0vKmxeEHXmn1O6E64rp0nDfm/Rlx4tnoIbP6Qsq14
QRqOKB/d3/hsGNC78kK5lqWh5Qb9Y01xw4BTupwLcsvArxZ8fXloGDR6D9bn
CMrABX4THUCGgZu1rGOqvAx0kzrLKWIwAkrXPEwP05aBJcxk+zzuUWAZY7rj
tpcMzBk9O5t4bgwcbb8UnuIjA9/7+sTr3xoD2yVu8TCfyMDqgprS2kdjgM/L
v/HKSxnIH5Uw7JU8BpIuYqfz72VgLktQPWBpDMwpqnw9UiID98v2O6x6Ow6C
ov7tXCVAgwIyCS7pWRNAt86XIiVCg6cyyml3SifAApdEB0WCBs9ydfuvapkA
VjbK96dlabA5Li1F4fcE2LbJqLx4Iw2aHsoCjdsYoDEn+oKdHg0qhhZ9FI1j
AD+GytaLBjQotO7NQ9mvDKCl8JXb9DgNUrr7j/L/YID3D35+AuY0+Pm3p9XT
bgZwPjI9LXGVBnOGRIEe+9wk03zQ95sfDe6VfWRi48YE5fzV5skBNLggdCL1
kw8TeOw1U4t9ToMqXW9Uq18wwUi4XV1ACA1We8sdK0xgguxLr1dYfmLH/0R3
1KCNCcynhlP4ymjwy+my8lF1FhBZc8vrbwUNKq0wSTqtyQKFJ/+enKyhwV7a
84VPh1hAJVt0oa2FBmcHhzKm2efpBY89Op9HaLDN/l6g0gMWCBd60nqCnw63
l0u9GPzJAs9W7nDJF6RDr07xvtsNLOC1uVtyoxgd3lOvCevoZIErxtuMluh0
uKauWVmLsMC2V+3Fn1To8G23xvk9EgSs++B9SXILHXYGyTWEyBFAz9zM6bGd
DoOuLJ1vWE3AvxYvrRNadCgd2/ukeRsBZStU0/8Z0CHl5KvtUscJyFVrMrY1
oUPx6uYDOmYEJO/zZNWb0qGvFVlhaEHAS4uGjZ8s6LBkrSeV2BFwIfZutMkt
Oty4+yTT2ocA44x12t+d6XC0VeuyVQABB4trOta70eGhwNtX9r4gYMPIGto/
Lzp043BjOUYQ8EulMjDuFR16rFI/JveFgGFNF1WJt3RYftnBbCCTgFZ9xZ/u
EXSYILkp71EuAfk3nHhMPtJhenSag2kRAameCjF5CXR452pOpncZAbHPy8D6
FDpc71awL6CSAL8v8ncXs+hQK/nEX+VGAu7+KKFfyaPD2rdvN+S0EHCj0SGz
DtPhgu0Jb+UOAk78Lpr6+JMOJeOjM5/0EaDLf/OZeDUdvnK++shrkIA9dNlN
7vV0eGxYzPHECAEKGva2xzvo0D7+ZsR9BgHix2h8eT10+MOrpaGTRQDPuYJY
5UE6bJP2lJeYIuC33fX9QaN0ePvgVyfFXwSM3ZPu+ctgr28918Y/S0DnU+Ru
M0WHwQa/9cp+E1AddVWubpYOJ40DCi/OEVCQKpmtuUCHHftL9zfOE5BR8P3U
xyU6/OwyULzqLwFx9Vd+iXHLQu4KfQOdRQJCB8SD7vLLwqR3kc37/xEQMJO7
eVhQFp4djrWkLxHgyWtTaSwmC9eKnh4vZfNtGbFruVKyMH1l/23jZQKs1+fw
K8vKQvPoyPk0Np/eY/3h+UpZWP9F2oPB5v/3Pij8/++D/h9EqeVJ
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.005]], 
        LineBox[CompressedData["
1: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
vh2R
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw1mnk4VV/Ux83uNStjSUhSKJpkau9KQoVUhlKGpEhSJFOShJIiJSGESJSp
8DPtHTJPCZnn2b333AyVId7zPs/7/nPv83nO2nut9d1r7XP2eY6s3Q3Ty2ws
LCw+5M///hsaCBxZlpXE4Xptz6qCmEDU8R6TIi2JE20KBo49ZILBEOYbsQ2S
mOUAp3vpAya4U9P6V22dJLYx8tV96M8EKcdefbrKJon9A+WDg7yY4MYVipXH
qgT2v5Sy/P4OE2gGe1EDlyRw4oW719FtJvhedd4+YVYCu5rYKNbcZILVozIb
OoYl8KBltpS+IxPUXo6oHumXwCYVFXHUK0zw4iHb7V/dpP1Pgd4yeyZQ+jba
zPdDAoefbvbhsGECC930h0cqyPGn2f2XzzJB7uHdv7KTSd4SQI0ETHDXLjm+
LIG0H5dyDtNmAv0AkRMNsRIYl8gq+WgwwcDX36kTkRIYXtvxQXUPE/AdKraS
DpTAk4l2W9kVmMAB6NaE2pPjd6eDw1QmULP+cvu1jQS2qGMzdOVkghU/hS1p
VhL4vf336xGsTBBZRvErPyOBbZzspi3nCIB1Gvcs6pL+4vfYRbQSYKO2WYLD
VlKf0+LnZJ8Q4JLrjlObZUl7h3Af0QACZKSssnVKkfy57tf0HQJo8ac5GIiQ
+g2+atK4RIDz/X9UlNnJeBVC/zocIECs/+uSX4Pi2P9m+J1/vQww8vm6y4de
cew61N3L+Z0BlKYOyVzqFMcsz574E5UMUHxq+kFbsziGo5bBDpkM0COndbyg
TBwPZuxCI14MsPFbb5dvHGlvzC21SZABLi1mh+6LFscte5+4abIyQIbKQx1G
JDneTURDY44OtKJU3lqHimMhypYtPR10cP6K39XD3iSbjq3PiaODWKrMH24L
cWzjs0M7Q44ONhpdEolcT8Z3ar51vQQNRIcUnX8hKI6Z7lv/vuamAbEK4eSX
vOI48dGV61x/ZoDQAawWzU7OV3Hu5vP2GcAlt8n4zZwYzmYppXhGzADmQsej
tB9ieLJvxuABxwyoemO4Vhwphv1f3B5l/pwCt+hq06PrxfCBUk61c+oT4Hmf
2aElQTHMQvXfaCw7AXIbfaIF+cRwoYcxbSfvBPj18ZueJocYNrEofpTVPw5c
XSyTn82L4sKcxwX5gePgBuFvpdkuik0si8zpDWPA+Vdz07MoUax4y2k60GgU
OCxcz9OUFMWD2XTtxQ1DIETqxstTVBHMdHmGv6JWwPpdrTOMdz22oZVFpcmn
g/cp/+0J/SuMOTT67L8M1SP64KeAJ9NC+O/zzxfqSvuQSMn1TW/GhbBtQEvN
3YU+pPlKufDjsBA+NXFGRUSlHwWd/EBv6hbCW7Xneadi+5FM0TsL4XohLG0D
jql4DqAzkXE7ozKE8Gc7lnTPl4Oo+Ojj7gRnISx/0Nzmn9YwGpYxuJ19VQhb
1M9U/Tg7jCgr3EJf7YWwnbWWc/SNYXQm9+HRYSshnLvVX5CWNIwY0vez5U8K
4csvX7IXUUaQ3N87QekqQlhzeeeenpYRtP5svb1DnyCuPZH967HpGDq3VzC5
r00Qj+qwu85dG0OJ608PnWkQxOdZ6kOPPBxDyq3dF44UC+LBf4WKMQVjSM94
2kzmtSBe16nYtWnjOPI0oBp0nxHESkfYvR36xlGfzjEVowYBfOnSpQEdo0kk
vyn02rcKAfxT5K6Hvf0kclppStcuFsCRWpcNb3hPot9FZgpKHwQwr7yvrlrq
JBI64LCZEiKAHfI+119amUSHdz8ULj8igFPx1oHryVMoTaFiYV8xP95ypDb6
Vs80sljHb30wjx/HBPkwCmnTiGfVrEYvg+S1289G/00j5/bpGPNYfmxqrn9j
ZvMMUg1cB718+HFaxZmWL3YzqHDI9nGJFj+e7AhGO0dmkGNjxlzlHn68V/4D
tXx2Bm34b8GqUYkff9ttEqvBRkO+4Y929W/kx2VWdPN2GRqCIKdtbZkPcyj1
PSu1oqGaOJbNR0r4cBrQkdVtpiGvEMOQ45/5sJ+JKlOkj4Z2uL/4dTqTD29r
NJeunaahJ8cVK+3j+PDxeW67Hk46Mlkydgzy5cO60g+EUzXpqNM8Ia9Wmw8P
KkVU1MTT0aMjU1Kte/mwl/ufy7Uf6Ehz156gbmU+zFqeEJuZT0dxXNUWM1J8
uCL8U8SGJjqy+cL4x/ePF0P3+cuRy3Q0te6gvkkpLz43KbLIMGGgAcct3/2/
8GKnTCU0eI6B2jHlXM5HXvxzy66oL/YM9NXlx7V18bz4Y2P8KYonA72uu/qs
zY8Xd4onrJq8YSCDgMgOC8iLLV5LhV8ZZiDQ5Wn96AAvVkY3dIKmGWif6sXJ
/1R58d7XTbeCZxlItl9xaYMsLw6v1zdXYyPQokbZpj5WXnzFKeSAnAyB0n9N
2ttW8GAhmddHbpkRKEG/iR5RzIMPXWaXyrci0MuEPI/yPB5savtBsNeOQPdP
+oVsSeHBnqXn1ZpcCGSZvj5zLJAHKzjpfTV8SCBjlsW9Ynd5sNfD2vb4xwQ6
at5fqnebB1tq1nW1PSOQGmd6c9pl0v56YNz4awJRbQ/OOerx4EHT4ZDETAKt
FWzxjTnIgyO3hr9gzyHQggCVs34/D3ae3npN/wuBhkp+iClv48HuaPDqnVIC
/Vz/X4LVZh58+5lGiO1XAjU6xSuGifPg2M4hO5VvBPpPwlGTwc2DDz76puXU
QKCsG0YV0iw8+ITbxj09zQR6V7XnhPFfKj4wvPBT5QeBItxXL2RPUnHtxoxN
nl0ECq4fGR8cpOKIl8GFN3oJdFeu9oZwFxU7/Z2Z1x8gkGNL5P1btVTML/v0
WOIogSxMwPpFTMV5wms7T08QSL9lOuVeIRUzpdoNhqcIpG4StZ8rm4plvNRe
nqQRSKHlUM2TNCpmeXxB4CWDQGImdMv1CVT8ZqQut5BJIM6W6JnXUVRseXK9
f+EsgUabCYG0h1R88N7lJyd+E6jNODZR5S4V72Jcqx78Q6CKZr3dn92pWA/p
bTm1SKBc49kKTWcqzhywiH+zRKCk5jdnv16i4ot3VdSrlgn03Nhg4th5Kh6i
eNLqVsj1bZ73bDKl4rn9IqUZ/wjkapzIc9aQit+xcr2/ukogm+bjcT2HqPhJ
ulcm6xqBTIz/qNhpUPGX/IpaD5JBcxKaVKVi20WbtWqSdxobnbqhSMUlj3+f
WCBZunlxeGEzFW9vPJW7SjK/8Tt3X3EqvuF8ddcoyStNJlzsglQsdNGi8h3J
NKOVV4+4qLh/8MrNIyT3NKVtF1ql4FlfTvVSMp46o9PFUQsUvMhWI7qe5KKm
1ROb6BSMQ10EjpLxpxt96E8epeDjdwZlT5P5RTeddd3RS8E/rqmc0iHzDzFi
Zcv5QcEZZ8LesJP63GnKjFSvp+BOGxtK6l8CORhZbC0rp+BI1l2R8qS+Zk3s
BbpFFBw2mQ7uLRBIzyhLvz6Hgvm5PgjmzxFoX9O57lPpFDwXpMpZ+4tA8kZc
zp2JFGzf6iBXSBBIpCnn38VoCnYOjnd8QCcQh9GFZ2PPKNjd+1TfjhkCzTVS
ZJ2DKdguV9b/0ySBWhutdb08KDj9j9NFwxEClZ/k7Vi7TsGG88wEu0EC5TTm
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
PmSC//s+D/7/93n/A7qMjO4=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {-0.999999512971478, 
        3.509284186961157}}, {{-6.283185307179586, 
       6.283185307179586}, {-0.999999512971478, 3.509284186961157}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"cos", "(", "x", ")"}], 
       RowBox[{"cos4", "(", "x", ")"}], 
       RowBox[{"cos16", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.45]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.45]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.025`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6711383419817896`*^9, 3.6711384307064934`*^9, {3.6711400033017673`*^9, 
   3.6711400473105974`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cospi", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "Pi", ",", "8"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.671138518781119*^9, 3.67113861421321*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", "x"}], ")"}], "2"]}], "-", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", "x"}], ")"}], "4"]}], "+", 
  RowBox[{
   FractionBox["1", "720"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", "x"}], ")"}], "6"]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", "x"}], ")"}], "8"], "40320"]}]], "Output",
 CellChangeTimes->{3.671138615724785*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"cospi", "[", "x", "]"}], ",", " ", 
     RowBox[{"cos8", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".02", "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".005", "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".008", "]"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.671138691512189*^9, 3.6711387177842875`*^9}, {
  3.6711387666876817`*^9, 3.6711387667672367`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.02]], 
        LineBox[CompressedData["
1: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
Oty4+yTT2ocA44x12t+d6XC0VeuyVQABB4trOta70eGhwNtX9r4gYMPIGto/
Lzp043BjOUYQ8EulMjDuFR16rFI/JveFgGFNF1WJt3RYftnBbCCTgFZ9xZ/u
EXSYILkp71EuAfk3nHhMPtJhenSag2kRAameCjF5CXR452pOpncZAbHPy8D6
FDpc71awL6CSAL8v8ncXs+hQK/nEX+VGAu7+KKFfyaPD2rdvN+S0EHCj0SGz
DtPhgu0Jb+UOAk78Lpr6+JMOJeOjM5/0EaDLf/OZeDUdvnK++shrkIA9dNlN
7vV0eGxYzPHECAEKGva2xzvo0D7+ZsR9BgHix2h8eT10+MOrpaGTRQDPuYJY
5UE6bJP2lJeYIuC33fX9QaN0ePvgVyfFXwSM3ZPu+ctgr28918Y/S0DnU+Ru
M0WHwQa/9cp+E1AddVWubpYOJ40DCi/OEVCQKpmtuUCHHftL9zfOE5BR8P3U
xyU6/OwyULzqLwFx9Vd+iXHLQu4KfQOdRQJCB8SD7vLLwqR3kc37/xEQMJO7
eVhQFp4djrWkLxHgyWtTaSwmC9eKnh4vZfNtGbFruVKyMH1l/23jZQKs1+fw
K8vKQvPoyPk0Np/eY/3h+UpZWP9F2oPB5v/3Pij8/++D/h9EqeVJ
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.005]], 
        LineBox[CompressedData["
1:eJwVl3c81d8fx68R18iKe69R0ZCQEcmIcyqzrK8WpUgZLSWSUCSRyKpkJStS
smfk3CQ7K9lku7j3fmRl+31+f30ez8fnjPf79X69z3kcKbvbFvasBAJhiIVA
+P83933k5ZsvCNTPCW3/PF7yUTU3civa3AnU1LXYSyXYVqq2XEPTsjOBOp+/
UXKhdCsVWo4OSDoSqOXd0YMGT7ZSDfJIm87nCNRMY/4ty+St1NMOXoBHnUA1
LyehfF1eam98kG/g7CZqCU5/fOgTN/WYdvaTa/82UIi6UUBXBidVa/JW4ZXx
DWSu+3do5T4nVfW1/MTF3xsIimXL2utzUvcxMk5Y5OP/6S6t/KMcVN63qYJa
tzdQ14hiae4uDmrnWsw73ol1pCtksrMxk516s9y/LLtjDal+1ZOK/8tCtXc6
zsj4sYYkbIHtQg0L9ZIw687UgjVkPbYq+TyBhfrfTR+/6Mg1RNGLpl41ZqGq
SXgaPTZdQwUHXle1fyRQWbxvd1pUr6KSvWcIH0Y3UJTW+bmFwhVUW/S1g3Rq
BdkT9noJpa2grrVmXzahFaT6A2NVjFpBMzHmvPqty6jV9KmQk/sKIkjtoNWb
LyNeuxzlHjX8f+XY1+pTS8jvGcediuJlpHRP6rHUtUXk/DuPHlC6hGj/ztVf
aJpF2rEP3VIylhCRKWay/80s4rUxXEMxS8jwGfemju0syqD18yw/WEIyxzXs
j879RaOrRLkbmjgTTUPfSPxF53fZXDMr+4cG9/vV3VhiIoPbPOPkr4vIcsxV
zaubhogBdj6DnxaRIYOTMOlKQ/XxpZSM2EXU4qHePsZHQ6b1jic1PRYRVAtx
DNKfQKf3VuVYqywiGf1ksl35GLLt9fZKylhAXRdsd3/+Now8DZgCclHzyJch
Yix2oQcduaT3cc5/Hkn6c55ozelG627xx8td59Hg9QOaHpzdyDf5hLvJf/PI
drGoM7y4EwWup/Xe5p1HSpE6vXW7fqNX+TZpBX5zKLx7t4HRnhaUtbNVS+f2
LCKMeB9+c6AMrfDaCJ+7NIuox3rMX66XIL0VOv22ySzyDRqeeNdShPraiQlJ
cjjf/GPT65OHuJ9DwhbaX0SY/hs0xp6KHOazqxpscfZ0PyaXGQN21IWaWFnM
IComk2/7qhJcL5KQvnt0BsHgRO3qR99BYcrHjedKM8j3+rMv3Y5VwPhRdXY5
Hz7+y3YvAbVqMO+wthtGYch3ev/GWGUd+KzVm/kzkIkEanZdKTZrATvGoito
1+nI/NTKn4yiDmD7t1Hc5iQd+foopIcIdoLkdcKD33J0pKTQlMa80QmkSddU
KunTSPJl7YGDO7uAgoHGhzjnaWTbP6Vd5dMNtDO6I0zvTiEiT12yx/4+YH1L
zL7gAQ1JCsgd5o0YBAkPTCtlz9MQ7WAj1lc0CAaf+u1M0qQhD73Bv659g+Bq
wlT3i9UJNMPFHrogPQRuNH8xdXw4geLFO1WMS4eAp/IFdbHH4ygz7aCv869h
ELMQx+P7bBQlOhD25AyMAup7WrCpwyhaaiiaUyOMAdqZQ7zbdUeRh8Rrkq/U
GFAvauL9sjmCZoz2CZ6/MgY63Fn45t1HEDF726jy6BgQWnIQcLIfRrre0lLR
PeNA80N+uNrxYVSSip22WhoHly0JglukhlFLk+S7PyITIKckRjC5bwidJrmI
HzGfAGYPGoX6Tg0hy7yPuzQqJ0DIirKI+bFBFFLztdc+jgYKPj56vUNyEEXH
HZYILqSBosIouZ7VPwh++DN0v5kGzrjXyQu7/kHeQztDP7BOgsh/CorPLg+g
+f1dp687TALelWWVOzp9qKRHQTB09xTY3AjThkudqPbpP6L2vWmQWmkV5VDS
iVruXy40CZwGRgG7sRCPThQt3pCjFDMNXm4tTuxe6kBifkOzt8qnwT6JATbX
ZdzXV4lKtQQ6MNOQr3+/8gtVX7jixf+YDubXFnY1fvmFZueYPWbhdBBDRV6z
nr8Qu+fQ7JV3dDBicOoAWG1DSocZSZxf6eD+Wc/wrtVW1FjWZgYW6UBnIvwz
aaUZGeY+lfGzZYBnzntsrng2ozzmwXHOWwzQtlAskLPShNRLH6TbPWAAB/Y/
rkarP9GxUzv930QwQKjUAU3vtQYUUN7WQKAyQNcH6nStdwOSt1hvVGpggF1K
p9+KrNcj589bndU6GKBIx4uQvV6HvOVu9lVOM8DAhbrqoY0a5CT++uGwMBPI
jFh7KPjUIN7HixHfdjDB3esz+702q1G0nGW/uwwTcDwgvxAmVKPaGP0rV7WY
QCHK/pQBSxVaCTmoaGLDBA9bWAYz2aiIUHL2s/07JpCnRJP+8SKUmlvtGZLG
BDZh8rdeCVWglX18h0I+M0HVwzNizdvLkbroozxSGROEnk9301UtQdyS9ASr
diagtmo1DGkUo4r+e0lGPUwwZ9gi5QOK0Eb/XeFtg0xgeXi5qfREAUrF2kMO
TjPBbuGT+xUv56B5kB7yfpMJPpHQZvTPLOR57GGXHTsGBLbQMn91ZaKiLhbS
ChEDPUManEbYB1TAtz2tSBADoMWu4MlKGrJUfk/pE8FAakXw5Yot71H4LVTe
K4qB23H9ZSoSSQiu6nZfk8LAh21b2/pME5BAoLPL0h4M3J25JG9hH4vytqd7
XpbBAOdH1qEjkZHI8qr/zu8KGEjemuF+9b8X6FFzWU+ZMgYO1xjLmT16ihZV
ZfTDVDHgO2luEWnriAqsI29Wa2CghOp7kyfbDMxPb+jLHsEAM9WQnTfeFRCe
PhK4poOB4WhfE/Gkx4Aij7r8IAZM//RFK7kFgcaQG9n3j2GgL1JiNjklHHiq
yKUa6GJAqKj+zYEXr8D8j+TqWT0MGHZ7aJe4RwPiETfpBwYYeLQmPXLMNh5c
J4NfPYa4PmHXq8b3JAL3uMQ+8gkMuCUdJWeKJgNhdlULpZMY4M+nXHfhSwV5
5ZHH9xhj4GMVVq7Glgaso05T53DW66jmX/uXDgbX+bsSTDAwOPHW7hs9A/Aq
n4/da4oBr2W3woChT2DKtYb0DGcSjzHRuOMzUNabtq7GOVdi9wXBhmzwM9LS
exBnafL62ek/OcCNkeTfgfPcOyeCaU8uECi3evoBZ6pMe0ZOex5YcRYKPYtz
aC44ta05HxjlXcoaxPe/oPlp7V5dARBNbF3Qx1nmOymt63sh8JndcA3C4108
6WemVVEEPql6qX/A86tqZyy9LSkGhPleixQ8/4iLVsmE/BKQNVPc5mmEgUvj
VSevfC4FyCS9RgHXS/620sKP9C9ghXr8KNLHwMq/uASZ5DKgWCljJo/rXePL
aRgcXw70vswR3I9jwC5yINY8ogJsbJSFvgMYYFnzl5tNRCDrYl2lmTYGWvJE
BowsqcCQEp7aoYmBOxLlztOO30CdrOk3p0MYgP/xHy7HvgHXcIs9bgdxfwfY
bYbcrwSxf2WfnlXEQA5GDFcI/A6ufUsLT8T96LvH2nKTrwqICflcIe7FgLlV
tmRLVBW4k/Ta3wD380zlmVyXtB8g+Mg+VmPc70pRyW0FP2oAVWhK8g4nBggN
C7FPTWqBeHNM3CtWPL5Nwytnf9eCMOnnHBHrTHDnGjb3b7QO2LmXbgjOMUHO
kSMiWuyNQO/UWoFaHxP4uoT184Q0gg6lvUyJDiYwTxt+37ftJ9DXDCjrbWaC
Gf4gtUe7m4BBdoz9SCUTRP+d+mQr1QIIEW1a29OZgBAiLGBk3wL4Ew0u1OPn
i5O0jptyRguwqTYrNI9mAvULEUdYlVvB23ChW5PPmKCr6vDPFNgGeg8Va5g4
MQEl2p85btMOMqQbhmZ24vEczLJoTmkHT4i2sVokJqA1dhYVT7SDZt3ZYVte
JihhkfN5dvs3KL6r4qW1xACWN1r5ZX06QA792AGVJgaI1tmhfCuhCwybu8wA
Vwb4eI+s3djfBa7OKd7ndWKA8kwBI7nt3eCWc+6bUmsGGBJjuzwZ1w1qfvVg
hXoMIPtvItw+pgeU2IWwa5Dw8dm5Mxdf9YH3gfPSD3Lp4E74Lst9eoPgu+Vd
TcfWabAst3Og4+ogaDqbnn+jchr41YhfDfAfBJI0B4VT+dPg1YbwnbHvg2Cu
h/Sg4dU0KL3J+Szl2BCQ17GMvXJ2GrAa0Yt3wmHwKJtr4Xj7FHjJUkSmaI2C
C+3Mc+fKJoHacozn7YujQL61gvtc+iTomXnYX+0zCihfttQcfjkJJAf1Uu5V
jYJYrW2N8dcnQVbFb4VfJmPgk92z7UvkSVDvtaAXajsOvHXlm3hv0QBhUdWN
PYAGLn+QPObJMgGcp/JbZlroIDKL7sfVMwI2VGUL02fpgH5bXSofjYAXPokx
l4QZwOuevL7++xGQKfzCrvEcfs/dK03af2cETOk4zKcPMMAWHe5tNPYR4PiS
QrGh43U0Hiq0kR0GSgkV2eNPZsCJbbW6Eg6DQNZg97/T72bBtmMXeveYd4Nv
V8ZZ418sAt3AbJ6VoCqQzPb600DLClBsruAwH/6CpJ21W4MbNgB5TV+XTaED
6Wu81Zfu3QDHiMfF/Z06kAP7ehl1agNMMF1SseQOlB5bnrbAtQksyELYU3In
kqnR8rYx3ATujJdnMjY70X5JzX0qPzZByYOdSnEN3Yh0LU7nlg0BXt92gzfL
vB9RxKNfCVuxQKcW5YvrLMMoq/NxdfBlFug2H77r7/ZhpPfqxhLrdRY4cz8u
oUVjGN3dCqz/erLAbc+mtC1chtHPzbHdTfEs0EqAtdD6zzDyG1XJDxxkgc25
8VmuxSOI8bm5dcWRFVpkXyZ1nR1D/tdL2e7eYYWlP7zYiHfGkNi+lEOTHqyw
P1MN2xk0hgwT3WM6g1ihkMgxC86yMZQcuf1ywSdWOOT6VDN3+ziyvH9j5hbG
CktIP0KsBsZRJeTkH3JngxqKSo1HjWmIOTMlUvOIDYZsfNrxw5aGxJKaJD4H
sMGAb7mfle7R0F2WKNkHUWxwLK1NmfqWhnZV7tEXLGKDf3xrP1YwaOjx8WMP
jy6wQcL26tsyQZMI6j+cTnJlhwFb/QrkP0+hm4u2s4Fe7JDhEvIrsmIKRafp
Lt96wg43Q14PDjRPoRkOXk7Nl+yw2+PkY5nZKZRYE7urLY8drjx14fE9NI02
DUusWGfZ4c6+B8SDxdOo4uRcjd2dLXBT1VbxUBodzbQJVM96bIFqh4V/OBTS
0e7zClV+j7fA33vj7t+voqNnTteoyZFb4OODgHlomI4snv4pGS7YAnecmTfY
K8FA4xUNGXbLWyB59e15FMRAFP3J9FkWDvjtROpyTxQDnfzJkebHzQF3iKrn
t6cwUE7v0eRkcQ5YtfeLpt1XBvJcKo4d1uaA6qHB7KNMBuI7mBps58cBa4LZ
zdxPMhEs/RY0+xzngNL5m2eZyBX+CfR7yQE9PAK74WUm6jIV809O5YAgZUnB
152Jkm+Eew9Xc0Bv14LiC++YqH32s+fdZg6od+Adm1YGE3F6NniwdnHAXI0a
xX95THTzGce9XZMc0Lj7wtqWaiZSe+99y46HExLHjqp7TzGRk3zsjdltnHA9
9MPZo3NMFJdffM1PghO2tvoQRlaZiFA5a598gBN2RYk3l/FiqH7A6dKwGSdc
K1I0qZTHkA3ljJndK06oxMGxJuaAIemXN3ddjueET8OKm9VuYoi51X/BJhUf
z3cHqtzF0CO2/LiLBfh6b2SHfj7EUAJTgGbZzgkdYoV9g15iyOGaTNm5Pk5o
auoSlxGNIYVREHp2lBPygdv7Pr7F0NduZ9XT85wwVvjuQ+N0DPVVNfqaCROh
dInLW5FSDKWC0VOmEkR4gNldov4VQze/rEqb7CFCCXYbySPfMLSaLfvzhCoR
tkd3fB+pxVCl7LFEoyNE6F6weymwEUPP31u5GuoSoeXfY9d4WzAkFvdMVP80
EXJMc80XdmBoWCSRrmtNhO+EuDl7uzH0MbwYHb9KhJWHXxgN9mFII2Dc/qgb
EdrVyv4XPIwhAsuGOvQmQkJnnIDyGIZqvUR4gT8RCihqzxdNYMjSRTfvyCsi
rF4W33GFjiFJ+oWnWvFEeC45yyaIiSGag6ulZioRdrJLlIfNYChn6LmcRiYR
ml+8pOw+i6H71skbhwuIMPhH2Ncj8xjS6SxtVSsnQs7DU5dGFjDEYdGaeqiK
CItCarZd/4ehpkbafdVGIkzyT+ppWcJQlAHhpEo7Ebp+E8wjr2DoUiV5x8E+
IuxuaI3WWcXrqa34V2mUCFu3lb3QW8PrWaxfpUgnwqq/1WHy6xgqOnjpjcI8
Ecak8yXM4fzo873rB9aIMOJyQ3HsBob0ZV5oy7NzQdLhs31SmxjiS0kVkOPl
guflZHiCcP69vXxkvzAXHDvQc7wF5/joX0UyElxwQWxvwD+cr26bDtq3hwv+
LBtq3cBZPpT1orQ8F+yoJu4bx3meKKa0V5ULpv3Je/oZ5/Inymx7jnBBehSF
eRpn/w3Djl26XPDQ9UjbPjwe4we2GVLGXDDie3T/cZyF5+97S57mglLL3+2D
8fj7nMPMdlpzQU/jxuU8PN/UybRdO67i600GxX7B9bh5tWJB4iYXzJ6YN0zG
9VL587tW3A2PX3cvx/VlDK1YMeLEvLngc5rFL0Fc38p29tui/lxQLfF3bswi
hizqVUTIr7ggY6Xrg9Ecnn93di0jjgt+yIenvP7ifpiU865K4YIPH360CMUw
dJG4Z8Qlnwv+XuGwtJzG0CA5McqwjAvyvGO345/EkN0+iRM7v3PBfmWxuvRx
DDnpC+c2tnHBLwnjxd5DGJo+E341pYcLrhe91C0dwJCzPS/Fc5gLvjmkp97Z
iyE3f3affbN4vqQxm+LfGPKpnDf2E+SGnaQ2di68P1jb7hCsRLlhsmXo9v+q
cD2H6PmKUtywEWYUeVLxfiGMifUrccP1zXaPuyW4n3R+0w6bc8MrR20/zadh
SNT0v3g+S27InZGoapSM1/fiT7MxG24IG6cv+eD9nOT9oyjyNjfMWd2VEY73
f+aXQn9GKDe8P7QUZ/AIQ4r1yupVUdzweF1aQYYHhvK6P0/HJnDDNz5nohj4
eVKy9N7CMIsbMs511Ys5Yui7WpRkyk98fldFDI8p7j99ofYHv7nhiMRcrLcB
3n9nQgPN+7mhXcalV80Q7we3AOY6HY/3VVyQuAqGevLcyy15eaCQtbq6MQnX
v3L2tqIwD1QNohX85MP1b3XezSHBA1uDtGyVOTE0NuPwPF+OB07WS9q++8dE
MwrnLPlO8sDXpYFdpE78PP50eP57EA80tziU5hnOROERjATdSB74PPNMzdkA
JhLzSDH6EcsDL8473RLwZiJ5Pf531Z94YO+eNXcJRyay+DNuVPeTB9LNbJqi
tZgoYVvUuyZBXtht+t/jAwMMJLNy8oSZGC+cfiBWPNHKQLmDLAvNu3ihYF+6
tu8PBqr6fOtEqwovnDI6es84k4EmDfQWfp3hhWFfKZKnPBhI1Xv+RHcML/S2
cr4lzc1AFXYfF6ySeaFJ3rOXjat0ZGBkm9jzkRcGNRxd+49BR+dJjQu9Zbzw
1IZk50ozHfnmpCQO9PNC2vM3T6tf0lHDqMXiiNRWWE9O+H1ahI7sTHKTmBlb
4QmHTbmfhGn0eN9lqYHcrTDSyTepGMPvcxbBpJ+lW+GlP0uvAwemUH/hncTM
uq1wfj0MdJVNIcsdSu+uT26F1xaO3dO5N4VMsKz4cRk++K49tOLAyCRSj8h8
M5DOB1N5jaLJmTTE9zv9RdN7fmjwdojVcXEMqQREsDtl8cP6oqqpM/1jyPKw
lxdLMT8cvkYKk6saQykxptdUa/lhZZPb4+CIMaR+aUE3doofhrA9PCYlN4Zy
XaU28sgC8KiPqU6F1SjqXXMufGQtAMMsKPyv3g8jRX7uPaRxAci5FBHvuN6P
NBrath6dF4Q6EjH0h9cb0fRyd5T+jBCsPt7jK10ZBe5wSXAGswhDOCgqxKbd
Bt4Fx5M+EkSgp63Wxaorg4Cji/dJJLsIXGTriPN7NAhu7nmIeRJFoEy9eLNS
zCBQ/3qx9qSACPxlb51h3TQIWpg7PBk7RWAQQ9kAOzwEWC2S+pWACDwF43dP
cg4DB0paavFDEfjuW/z3B7EjoPEqSTDxsQj0D6YR2PNHwMHcgIfPnorArrHN
f54NI2DTyPGs1QsReELsVbbC2giI9pIhrsaLwOHTZ4M/Wo+C+oGPN3TKReBv
rj6rAdExoPA+++CPFRGYTV06EeI/Dij95bGsm/h6AnnPz8ePAxaRelbIRoLy
VXpBfAXjoN1/tO0LDwlyuWgY7xsZB55XRV1zJEhw5ZRVFgVOgJrdT/LjdEgw
teGMydD8BLBNPqt6148EzWhhV48aTYITPVfiswNI0ONrt2vYxUmgIuTCznhO
ghYj8nnIZRJw+AW3O74kQUUXLbPqmEmQeZnqdjGVBBsN7pGu0SbBkqRsoWE1
CU7pLrozfKZAxLv1Qzu5yZAp/slH88000G8NJArzkWHi7bmJJ2nTYIVVqJco
RIbW7xUDcwqngZ2DtO+sKBme375bLP/XNDh4wKz+x34yVAq4bXeBjw7avyRe
umlEhkdgvMK+R3TwjC6rfNmEDPu38JTEBtPBkR2FbGf/I8PUc4baM9F0kPq4
7gOwIkPorc+E+XRwz3B2VugaGdp7Dbe5j9MBqeN4YOkzMtzCp0DaY8AA9ZxN
VlkhZKgaHemWZcEAjzQs5VPCyZAYIZAkeokBJuJvtoZEk2HIQJpYpBsDlFx5
LW77gQz/bW4J40pkAKu/49kctWTo+DgzhvUvA/DtdvFbbSDD2ucuZhErDFB5
evX0TDMZzk31526yMYFsCf9KdycZjvj1HPLC39Mrj9R1P0+Q4eTBeeNpDSaI
533edYqTAqMDqbcSPZkgbLuqewUPBeo+6NrY8GMCP4WBbfsFKFB815YplWAm
cDQ/aLZBocConuDbknFMcPBVz48PshQY7FCXyFLKBHvf+1/ZpkiBmm0JNwSo
+Pu+SIHlkQoFvo//+mu+mgnWO/2OnDpCgaQamx067UxQKy6Xv25Cgd2Z9wVb
8HdjmfxvcycLCkw0eqIZNMsEWdo+zLazFNgUutWAvMQEL21+7f9gQ4Ebxo+z
clkxEHDnYY3QVQr8etet9ysnBjwe77N/6ESBFfzLYQm8GLiU4pVo4UKBbewK
qv0iGDAv2Kvz9R4FcpxTXNQUw8DxH829+zwpkOB/ZfTmDgzITOwmr/tR4Bjr
pSljaQyIL/0scAykwKmw/PaV/Rjg4/KwaAumQPZOq3DvAxiYk218kf6KAt2r
WaRWVTAwruUuJxRDgZZeNbX/1DDQZSxZ5/2WAqUc7CdqNDDQcLHeYSIJn//2
pMONIxiocHZjt0ijQKSHKQzrYCDHZ0dy+UcK1Netl5U/ioGU8FqwL5sC02jn
jxsdx0BU0t3+iHw8v7jddhp6GHiWJ+G1VkyBmcEf76zpY8DrezXFsZwC6Wcf
WEYaYsC5/U5RK5UCRYsl2FaNMGA7Jnb6yA8KvCO757zaSQycWqz6m1ZHgb/j
pQx0jTGgz3k7TLCJAjv5M/L3mGBAnSJ6wLuNAleOmgd14iy3/3v9eAcFEs9k
5VqbYmCH5i2n/3op8IfrBVIBzoInyRzlf3A/uM8k9uPMbv0tRXqUAk0DObS6
cV68eeNoBI0CQ6vUmtJwnnwo8meVToFfRkR19XHuC0XeDn8p0LzNIKAY36/p
3TWx1gUKjDx77tEKHt+3nG0lWisUKJTdL8KPc8G3r2fSNnA/KjurLZzAQHqb
45wAmyhcpMXUZeL5xo4IRnhxikL5g1jJIVyPkPkyhXEeUZhmucwIw/Xy2eLQ
aC4gCt2UoUWZLgbukgSulwmLwplCg+biYxi4uu8Lp7SoKJR8G2b6FGLgnPrV
9+HbRaH/fGTpbrxeJ4z4jq9KiULhkprlSC0M/A9KEkkX
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.008]], 
        LineBox[CompressedData["
1:eJwtmnk0ld/3x413MnMraTCkUmSIopRzmszTR5NEVIhIKklFhiQlIiUhhMiQ
IaSQc0JRZqGMmcd774NQJH7Pd63fP/eu19r7nL3P3u9znues9cieuWjhwMPF
xXWS/Pnfv3W5g4peExOboyLbvzuE4e9gN3ndCCY+2CcaNNvOgI9D53wpoUzs
YWxgHJnMgKqPbnV+DmbimUKNXN8LDHg+NuyRnh8TK2jPee3nYcCu19lcBheZ
2ElS0PCsCh3iZk6XkQkTN77IJV4/pcLgtRef/Ecn4w3fGnF6zgetNt8IsuJn
4sk1VwKoV/ig0vY7185yMzE87tDUo88HG/ViT1ydl8BZDhTjnbO8cNWVqnXP
xiRwio+QuJ85L0z9Ip3a+0UCW1qf3a0txgMrPRvfXrwvgSUPKr6JuLwMovw7
07yCJHBj4+qStq3LwOnBcLR/gAT22in27cbAEhBMWrwReUMCT77qluo5ugQO
1ymAovMS2N1vKoEH/AP9G/yrlgwlsB/32TQLub+Au0ntR6gAaT95Xi97y29g
PplQt48qgXP7ja3rRuZAvIhwxSyPBJZxFF9rmDoH9piOv7ZZEMfhCmfPW8nP
Ac+apNvbxsRxsEbFqir5WTD+SUKl7rM4nvQJ/s9q5y/QUjx7RzBAHNu9mdH4
pEYAuY6zN7EPydXP/7lVcMCl+SZ3j+vi2PzADeOCoxwgrJV9sstdHKsudE0K
ebOBQaGjWpatOMbXh9oGGyZAWc73LqO94lgh4f2GM5Gj4FXKe/WQP2KYa9F5
krjdD55dn9U6PCOGzf++urNuSz+4b6qms2ZSDDfuKLapru8Drn9e6WeOiGEF
L53NkWv6gKpxtE1Nmxi246rY3nr1J3j/y/OuQKEYTjzMpy8r0wG+7tfoDLkk
hmVCnuYOSjeCklXuvYcviGE/1gfzQ8INIIuVObTGmRwf3iPp3FMHwqI2TGba
iWEcl5aZcLsGHB4X5681I/1dT9DC+j6DrogpZUFl0l7f9dboWwlg92YHPBgX
xVzXKnarr3yKmKUX1j0fJnlpjFX5MB7tfqr07nU/yaEySqXLSSjIJINd3yGK
/XznZ4vsMpBM8UtLsRrSLjeRoe5RgI5ExilHZYpiu5xXi3UHP6KSQ/c7ElxF
MS5cSLW4VY/6ZQyu5jqR/g+OMQL0GxBtkSr60Z7kY9K29bRGdOTNnUP91qIY
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
gkpb3cNZjWR+//991v8BVuw2EQ==
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {-3.8220080720091887`, 
        3.7763583639097433`}}, {{-6.283185307179586, 
       6.283185307179586}, {-3.8220080720091887`, 3.7763583639097433`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"cos", "(", "x", ")"}], 
       RowBox[{"cospi", "(", "x", ")"}], 
       RowBox[{"cos8", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.36]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.36]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.14400000000000002`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.14400000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.008`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6711387353935857`*^9, 3.6711387678805265`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "x_", "]"}], "=", " ", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "-", 
   RowBox[{"cos8", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.671138806385191*^9, 3.671138813959922*^9}, {
  3.6711388548424063`*^9, 3.6711388667906203`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "-", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"], "+", 
  FractionBox[
   SuperscriptBox["x", "6"], "720"], "-", 
  FractionBox[
   SuperscriptBox["x", "8"], "40320"], "+", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.6711388778344393`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", "x_", "]"}], "=", " ", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "-", 
   RowBox[{"cospi", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6711388877145395`*^9, 3.671138926737259*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", "x"}], ")"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", "x"}], ")"}], "4"]}], "-", 
  RowBox[{
   FractionBox["1", "720"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", "x"}], ")"}], "6"]}], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", "x"}], ")"}], "8"], "40320"], "+", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.6711389316661644`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], ",", 
     RowBox[{"q", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".02", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".008", "]"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "\[Rule]", " ", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6711389340526123`*^9, 3.6711390787207403`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.02]], 
        LineBox[CompressedData["
1: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
3DTCi/aer636tV5NNUZEJQcs3WW8Nk1gRW9en97ruVG1mdOjZX99u6q9/mca
lOHetqe8hE0TVstMCW81bEifN71QFvdIYzqbsGnS37JBjuZXy6TKzfxPmUy0
3Uk9mv95qMxdaIku0rti031l5anBRX00/3NnGZu0iP1+n/JNt5SdKSjY7kH7
P9eVJanqfa3y+bTpyrKxT533ebb8z1iZooGzjLUv9p8fNNL0ZW35n0vKpPlj
+P6xwU0nlVk9k3aK5Ab/OZzhU4UcP/qfKx+cFvgmVLZp/BPPjbo47vr4n/c6
Pqxm3lv6n0POvXHTUSz5bx5rUvv6S6X4v3xWv1HUS7Pov9zi0FLDB8P3/+W7
eI/tPWCT+5/f8sGNmPqc//pE+pGs7x1Z/+Wdv1QYDabS//ON+J6PCoKv/jNp
1NQs3Prqfy7BSI6s745rbu5Tn0zVp2NLuKX5v9zkZ3eMrNvj/+VlD1clBrSt
E/4zH6sRk1Fb9n992/DeONMw8F9Os+onNZMEN51b1pi/tdfAAtP83/NPGrZP
E+j7f7sIljn/ufpp05VlyAnOQ2VT/3NNGTHAdiP4bvmmm8v6SgurL2z8z51l
uVNMoTKPKjb9q4wkbmmxwVG56d9lpmffiTRG/8/jZSIhtKNJwp+pJs2UTZef
znNN+5//lWH/0u9py1Rt9tfLQqVXtXiK/uctqLXNcZbBw9VUI0yobHRy8/vP
/zMHSvg6H+dvXEN1HzfauKF/6Uzrpq23oUmKCVJ7LtRu7hNCXa5Nzf4b3HSj
KIokapfVOH7Z9G6U+D3KL3Zu00n70D7GUaPr979SLSuL5qqrb1Wjq6M6UAEl
uT7rYQ3edMwh1DSt/3U3T/3m+eqoSNdB5+z4TRO00GnOx0oPdzVQbaqDYjrd
6yZvNy2rj4beO1C9U+Eb1e+NUOscn2fTpZteNUVj/o69tRZtpJrlFEoI5iUa
2G06zhy1l9Bwk8vYdNF5tBG72rF9YtOq1qjy+TB1Wrkmqmdt0aT50qQxt03z
XUGZQgfpvpds+t011GUfx7WPq5uuc0I7Kg/VpyDNFJM0XVHEykYu2G/T47fQ
9KWgKLcaqgmLd1Bi5PslS7bv1NzRA3WX6b2ga0o1weIh2lfDWL4/kmrskjeq
f0lOgq+DauS3L5q7di5ofUcL1SUBKH+M3+SQ1aaHHqMk+RyzbylUk+49RUfq
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
2RsfduTA2j13K0+LbUX+9/+H/B9l81Mr
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.008]], 
        LineBox[CompressedData["
1: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
s/1qroI4+Ly1inVdfb4iErfQfXSbN8OTssjHkEXLfH+G+aSQeQ7Rw1pXV70N
kY/Za94UxTBxM2IncuSQQxzDqcKI1J0z2+yTV/P1yPi60Bm7TIbJvEhxRFK1
bc5qzoEEsRQknSxczVkRvaAaD5vyVRMQnrkfB05UMUyY12w9PydoXbfqGc2U
cb5hq+ZVT2qedpV+faxr1SOaCv3w1tH+Vfdr/rU9Zn9kbNVUzTftHqqW06tu
0wy1DGM7vLjqZk2TLw86zFnZGa7TFDQqem7Gvepqza6qOvIhwVVXaWbC/sOm
Yqsu1TzzakHq4PZVp2qq7lk/byy/6jzNhVzZz0aq/+WVslqphpr/5ZGPjp83
0Fk19hucFLFRz/K/fu+G1DEdm//yp9ElqLbjf94XNuh0wOc/W3np5GvG/Wfx
sRPXNJL/8/Dp81b7M/+/v/yiTfry3sL/nhevTzBWaf7PLZvL+2QEOf5vixqV
DcJxHP/f19KeW/0r6T9bjcgFVmX8v19+kn17n1fBf7mLnuDLuqb/9l2pnDYJ
4ef8v5mbPAnHN646TzP0x1jBbon/crbfLs5rZVZdqhlJGBD9rrhqiuY6Pvv6
AvVVV2tGb/0eHEn8z+t3H99jb7DqJs140DK812zVbZobTc2TeaxWTdVMPvn5
0IDdqvs1t5w1ZCl3XvWIZlrg++LYcwyTJzW33zjg5npx1dOaWUlvNhOvrPbn
NWWe7WsUCl81Acl5VRT66xbDFBZkd42SelX8qtmR/PbnPxNTGCbyIHtGZB56
ZTGcKoCUzj6yMHix2hdCNNi3rd1avOpNSIVwStnMG4YbxBHiTtGzde8ZNtuO
vFOLF8/4zLCnNKKnJ9B8qWU134VUH7kVbvZ99X2UEGMnTo2dAwxTVZF6n7Dx
pTGGq9UR81Dm9OZphkkI0nwn6MizRYax37NjGfPsIaxcdJ/RQTryfcutuBkm
GCAnK6fO7RZkWNwEoTZ6SK4VY9jbDHH4MdraJcmw/GFkYPJ0ZIEcw6ZHERdC
HxKpwnD/cWSU1+43SYPh5ZPI2a2dmXu1GT5ij0wqHLPiMV7NTyHnwVeuAQuG
WZyRvwcPoa+tGfZ0Qy6drPWOdWDY3ANZPKMv5erG8HEv5Ergu3boTTe56TzC
fAPeFPJnOMkXCU16TfwVzOi/uYSwPds7/e46w1qXkeiYXyk6sXQTP5IRUb8M
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
5dOxaJF9CdDIkEd7QWIjkdzG/jH1ZgL8H5IJJsQ=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {-3.8237220038491797`, 
        5.52083733237121}}, {{-6.283185307179586, 
       6.283185307179586}, {-3.8237220038491797`, 5.52083733237121}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"y", "(", "x", ")"}], 
       RowBox[{"q", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.36]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.36]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.14400000000000002`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.14400000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.008`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.67113905771564*^9, 3.6711390799958954`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.671137002198736*^9, 3.6711370092972383`*^9}}]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 96, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[679, 25, 502, 11, 31, "Input"],
Cell[1184, 38, 380, 12, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1601, 55, 373, 10, 31, "Input"],
Cell[1977, 67, 522, 18, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2536, 90, 350, 9, 31, "Input"],
Cell[2889, 101, 443, 14, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3369, 120, 433, 9, 31, "Input"],
Cell[3805, 131, 701, 19, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4543, 155, 212, 5, 31, "Input"],
Cell[4758, 162, 98, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4893, 168, 352, 9, 31, "Input"],
Cell[5248, 179, 197, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5482, 190, 352, 9, 31, "Input"],
Cell[5837, 201, 313, 10, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6187, 216, 1107, 28, 31, "Input"],
Cell[7297, 246, 55428, 979, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62762, 1230, 352, 9, 31, "Input"],
Cell[63117, 1241, 577, 18, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63731, 1264, 954, 26, 31, "Input"],
Cell[64688, 1292, 53670, 952, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118395, 2249, 351, 9, 31, "Input"],
Cell[118749, 2260, 711, 26, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119497, 2291, 909, 25, 31, "Input"],
Cell[120409, 2318, 51869, 920, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172315, 3243, 288, 7, 31, "Input"],
Cell[172606, 3252, 373, 12, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173016, 3269, 238, 6, 31, "Input"],
Cell[173257, 3277, 735, 26, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174029, 3308, 732, 21, 31, "Input"],
Cell[174764, 3331, 48950, 856, 245, "Output"]
}, Open  ]],
Cell[223729, 4190, 94, 1, 31, "Input"]
}
]
*)

